# Beezig GitLab CI Configuration
# Copyright (C) 2020  Beezig Team
---
image: openjdk:8-alpine

stages:
    - build
    - test
    - deploy

cache: &globalcache
    paths:
        - build/libs/*.jar
    key: "$CI_COMMIT_REF_SLUG"

build:
    stage: build
    before_script:
        - apk add git
    script:
    - ./gradlew build
    artifacts:
        paths:
            - build/libs/*.jar
        expire_in: 1 week
    cache:
        <<: *globalcache
        policy: push

pages:
    image: alpine:latest
    stage: deploy
    before_script:
        - apk add git
    script:
        - mkdir -p public/release public/beta
        - if [ $(git rev-list --count "$(git describe --abbrev=0 HEAD)") = 0 ] ; then rm public/release/*.jar || true ; cp build/libs/*.jar public/release/Beezig.jar ; else rm public/beta/*.jar || true ; cp build/libs/*.jar public/beta/Beezig.jar ; fi
    only:
        refs:
            - master
            - rewrite-2020-archer_321-ci # TODO Remove me
    except:
        - merge_requests
    cache:
        <<: *globalcache
        policy: pull-push
        paths:
            - public # Also store the previous beta build / release

deploy:version:
    stage: deploy
    before_script:
        - apk add openssh git jq bash coreutils curl
    script:
        - chmod go= "$DEPLOY_KEY"
        - mkdir -p ~/.ssh/ || true
        - ssh-keyscan -H 'gitlab.com' >> ~/.ssh/known_hosts
        - export reltype="$( if [ $(git rev-list --count "$(git describe --abbrev=0 HEAD)") = 0 ] ; then echo release ; else echo beta ; fi )""
        - ssh-agent bash -c "ssh-add \"$DEPLOY_KEY\"; git clone git@gitlab.com:Beezig/version.git ; version/update-version.sh --module beezig --type \"$bversion\" --version 7.0.0 \"version/$reltype.json\" ; cd version; git add \"$reltype\".json ; git -c 'user.name=GitLab Deploy' -c 'user.email=noreply@gitlab.com' commit -m \"Update $reltype version\" ; git push origin master"
        - curl -X POST -F token=$BEEZIGLABY_TRIGGER -F ref=rewrite https://gitlab.com/api/v4/projects/11233515/trigger/pipeline
    only:
        refs:
            - rewrite-2020
    cache: {}

...
